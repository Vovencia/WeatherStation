{"version":3,"sources":["webpack:///./system/api.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mHAAgC;AAEhC,IAAI,MAAM,GAAG,yBAAyB,CAAC;AAEvC,IAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,EAAC;IACnC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAChD;AAMD,SAAS,GAAG;IACX,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,QAAO,SAAS,CAAC,MAAM,EAAC;QACvB,KAAK,CAAC;YACL,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM;QACN,KAAK,CAAC;YACL,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM;KACN;IACD,IAAG,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,EAAC;QAChB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KAChB;IAED,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;IAEnB,OAAO,qBAAK,CAAC,GAAG,EAAE;QACjB,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;QAC7B,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;YACf,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;SAClC,CAAC,CAAC,CAAC,SAAS;QACb,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;KAC7C,CAAC;SACA,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;SACvB,IAAI,CAAC,cAAI;QACT,IAAG,IAAI,CAAC,IAAI,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,YAAY,GAAG,eAAe,CAAC;QACnC,IAAG,IAAI,CAAC,KAAK,EAAC;YACb,IAAG,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ;gBAAE,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;iBACvD,IAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC;gBAC1B,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aAClC;SACD;QACD,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,KAAK,CAAE,eAAK;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;QACpB,MAAM,KAAK;IACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,kBAAe,GAAG,CAAC","file":"system.js","sourcesContent":["import fetch from \"cross-fetch\";\r\n\r\nlet apiUrl = 'http://localhost:30001/';\r\n\r\nif(apiUrl[apiUrl.length - 1] == '/'){\r\n\tapiUrl = apiUrl.substring(0, apiUrl.length - 1);\r\n}\r\n\r\nfunction api(): Promise<any>;\r\nfunction api(url: string): Promise<any>;\r\nfunction api(url: string, data: any): Promise<any>;\r\n\r\nfunction api(){\r\n\tlet url = '/';\r\n\tlet data = null;\r\n\tswitch(arguments.length){\r\n\t\tcase 1:\r\n\t\t\turl = arguments[0];\r\n\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\turl = arguments[0];\r\n\t\t\tdata = url = arguments[1];\r\n\t\tbreak;\r\n\t}\r\n\tif(url[0] != '/'){\r\n\t\turl = '/' + url;\r\n\t}\r\n\r\n\turl = apiUrl + url;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: data ? 'POST' : 'GET',\r\n\t\theaders: data ? {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t} : undefined,\r\n\t\tbody: data ? JSON.stringify(data) : undefined,\r\n\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tif(data.type == 'ok') return data.value;\r\n\t\t\tlet errorMessage = 'Unknown error';\r\n\t\t\tif(data.value){\r\n\t\t\t\tif(typeof data.value == 'string') errorMessage = data.value;\r\n\t\t\t\telse if(data.value.message){\r\n\t\t\t\t\terrorMessage = data.value.message;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(errorMessage);\r\n\t\t}).catch( error => {\r\n\t\t\tconsole.error(error)\r\n\t\t\tthrow error\r\n\t\t});\r\n}\r\n\r\nexport default api;"],"sourceRoot":""}